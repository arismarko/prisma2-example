{
  "{\"sourceRoot\":\"/Users/arismarkogiannakis/Desktop/Demo/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/arismarkogiannakis/Desktop/Demo\",\"filename\":\"/Users/arismarkogiannakis/Desktop/Demo/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/arismarkogiannakis/Desktop/Demo\",\"plugins\":[],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/arismarkogiannakis/Desktop/Demo/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/arismarkogiannakis/Desktop/Demo",
      "filename": "/Users/arismarkogiannakis/Desktop/Demo/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/arismarkogiannakis/Desktop/Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/arismarkogiannakis/Desktop/Demo/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/arismarkogiannakis/Desktop/Demo/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/arismarkogiannakis/Desktop/Demo/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "require('dotenv').config();\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar port = process.env.PORT || 3000;\nvar app = express();\n\nconst {\n  PrismaClient\n} = require('@prisma/client');\n\nconst prisma = new PrismaClient(); // parse application/json - VERY IMPORTANT\n\napp.use(bodyParser.json());\napp.post('/api/stores', async (req, res) => {\n  const {\n    body\n  } = req;\n  console.log(body.date);\n  const dataToAdd = {\n    storename: body.storename,\n    location: body.location,\n    coordinates: body.coordinates,\n    date: new Date(Number(body.date)),\n    amount: body.queue,\n    Item: {\n      create: body.items\n    }\n  };\n  const store = await prisma.store.create({\n    data: dataToAdd\n  });\n  res.status(200).json(store);\n});\napp.get('/api/stores', (req, res) => {\n  const {\n    query: {\n      missing,\n      date\n    },\n    method\n  } = req;\n  const fulldate = new Date(Number(date));\n  prisma.store.findMany({\n    include: {\n      StoresOnItems: true,\n      Item: true\n    },\n    where: {\n      date: fulldate,\n      Item: {\n        some: {\n          item: missing\n        }\n      }\n    }\n  }).then(results => {\n    res.status(200).json({\n      results\n    });\n  });\n});\napp.listen(port, function () {\n  console.log(`Example app listening on port ${process.env.PORT}!`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJleHByZXNzIiwiYm9keVBhcnNlciIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImFwcCIsIlByaXNtYUNsaWVudCIsInByaXNtYSIsInVzZSIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJkYXRlIiwiZGF0YVRvQWRkIiwic3RvcmVuYW1lIiwibG9jYXRpb24iLCJjb29yZGluYXRlcyIsIkRhdGUiLCJOdW1iZXIiLCJhbW91bnQiLCJxdWV1ZSIsIkl0ZW0iLCJjcmVhdGUiLCJpdGVtcyIsInN0b3JlIiwiZGF0YSIsInN0YXR1cyIsImdldCIsInF1ZXJ5IiwibWlzc2luZyIsIm1ldGhvZCIsImZ1bGxkYXRlIiwiZmluZE1hbnkiLCJpbmNsdWRlIiwiU3RvcmVzT25JdGVtcyIsIndoZXJlIiwic29tZSIsIml0ZW0iLCJ0aGVuIiwicmVzdWx0cyIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUVBLElBQUlDLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUcsVUFBVSxHQUFHSCxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFFQSxJQUFJSSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQS9CO0FBQ0EsSUFBSUMsR0FBRyxHQUFHTixPQUFPLEVBQWpCOztBQUVBLE1BQU07QUFBRU8sRUFBQUE7QUFBRixJQUFtQlQsT0FBTyxDQUFDLGdCQUFELENBQWhDOztBQUNBLE1BQU1VLE1BQU0sR0FBRyxJQUFJRCxZQUFKLEVBQWYsQyxDQUVBOztBQUNBRCxHQUFHLENBQUNHLEdBQUosQ0FBUVIsVUFBVSxDQUFDUyxJQUFYLEVBQVI7QUFFQUosR0FBRyxDQUFDSyxJQUFKLENBQVMsYUFBVCxFQUF3QixPQUFPQyxHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDeEMsUUFBTTtBQUFFQyxJQUFBQTtBQUFGLE1BQVdGLEdBQWpCO0FBRUFHLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFJLENBQUNHLElBQWpCO0FBRUEsUUFBTUMsU0FBUyxHQUFHO0FBQ2RDLElBQUFBLFNBQVMsRUFBRUwsSUFBSSxDQUFDSyxTQURGO0FBRWRDLElBQUFBLFFBQVEsRUFBRU4sSUFBSSxDQUFDTSxRQUZEO0FBR2RDLElBQUFBLFdBQVcsRUFBRVAsSUFBSSxDQUFDTyxXQUhKO0FBSWRKLElBQUFBLElBQUksRUFBRSxJQUFJSyxJQUFKLENBQVNDLE1BQU0sQ0FBQ1QsSUFBSSxDQUFDRyxJQUFOLENBQWYsQ0FKUTtBQUtkTyxJQUFBQSxNQUFNLEVBQUVWLElBQUksQ0FBQ1csS0FMQztBQU1kQyxJQUFBQSxJQUFJLEVBQUU7QUFDRkMsTUFBQUEsTUFBTSxFQUFFYixJQUFJLENBQUNjO0FBRFg7QUFOUSxHQUFsQjtBQVdBLFFBQU1DLEtBQUssR0FBSyxNQUFNckIsTUFBTSxDQUFDcUIsS0FBUCxDQUFhRixNQUFiLENBQW9CO0FBQUVHLElBQUFBLElBQUksRUFBRVo7QUFBUixHQUFwQixDQUF0QjtBQUVBTCxFQUFBQSxHQUFHLENBQUNrQixNQUFKLENBQVcsR0FBWCxFQUFnQnJCLElBQWhCLENBQXFCbUIsS0FBckI7QUFDSCxDQW5CRDtBQXVCQXZCLEdBQUcsQ0FBQzBCLEdBQUosQ0FBUSxhQUFSLEVBQXVCLENBQUNwQixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNqQyxRQUFNO0FBQ0ZvQixJQUFBQSxLQUFLLEVBQUU7QUFBQ0MsTUFBQUEsT0FBRDtBQUFVakIsTUFBQUE7QUFBVixLQURMO0FBRUZrQixJQUFBQTtBQUZFLE1BR0Z2QixHQUhKO0FBS0EsUUFBTXdCLFFBQVEsR0FBRyxJQUFJZCxJQUFKLENBQVNDLE1BQU0sQ0FBQ04sSUFBRCxDQUFmLENBQWpCO0FBRUFULEVBQUFBLE1BQU0sQ0FBQ3FCLEtBQVAsQ0FBYVEsUUFBYixDQUFzQjtBQUNsQkMsSUFBQUEsT0FBTyxFQUFFO0FBQ0xDLE1BQUFBLGFBQWEsRUFBRSxJQURWO0FBRUxiLE1BQUFBLElBQUksRUFBRTtBQUZELEtBRFM7QUFLbEJjLElBQUFBLEtBQUssRUFDTDtBQUNJdkIsTUFBQUEsSUFBSSxFQUFFbUIsUUFEVjtBQUVJVixNQUFBQSxJQUFJLEVBQUU7QUFDRmUsUUFBQUEsSUFBSSxFQUNKO0FBQUVDLFVBQUFBLElBQUksRUFBRVI7QUFBUjtBQUZFO0FBRlY7QUFOa0IsR0FBdEIsRUFhR1MsSUFiSCxDQWFRQyxPQUFPLElBQUk7QUFDZi9CLElBQUFBLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBVyxHQUFYLEVBQWdCckIsSUFBaEIsQ0FBcUI7QUFBRWtDLE1BQUFBO0FBQUYsS0FBckI7QUFDSCxHQWZEO0FBZ0JILENBeEJEO0FBMEJBdEMsR0FBRyxDQUFDdUMsTUFBSixDQUFXM0MsSUFBWCxFQUFpQixZQUFZO0FBQ3pCYSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxpQ0FBZ0NiLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFLLEdBQTlEO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXJpc21hcmtvZ2lhbm5ha2lzL0Rlc2t0b3AvRGVtby8iLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5cbnZhciBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuY29uc3QgeyBQcmlzbWFDbGllbnQgfSA9IHJlcXVpcmUoJ0BwcmlzbWEvY2xpZW50Jyk7XG5jb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XG5cbi8vIHBhcnNlIGFwcGxpY2F0aW9uL2pzb24gLSBWRVJZIElNUE9SVEFOVFxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmFwcC5wb3N0KCcvYXBpL3N0b3JlcycsIGFzeW5jIChyZXEsIHJlcykgPT4geyAgICBcbiAgICBjb25zdCB7IGJvZHkgfSA9IHJlcTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhib2R5LmRhdGUpO1xuXG4gICAgY29uc3QgZGF0YVRvQWRkID0ge1xuICAgICAgICBzdG9yZW5hbWU6IGJvZHkuc3RvcmVuYW1lLFxuICAgICAgICBsb2NhdGlvbjogYm9keS5sb2NhdGlvbixcbiAgICAgICAgY29vcmRpbmF0ZXM6IGJvZHkuY29vcmRpbmF0ZXMsXG4gICAgICAgIGRhdGU6IG5ldyBEYXRlKE51bWJlcihib2R5LmRhdGUpKSxcbiAgICAgICAgYW1vdW50OiBib2R5LnF1ZXVlLFxuICAgICAgICBJdGVtOiB7XG4gICAgICAgICAgICBjcmVhdGU6IGJvZHkuaXRlbXMsXG4gICAgICAgIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IHN0b3JlID0gICBhd2FpdCBwcmlzbWEuc3RvcmUuY3JlYXRlKHsgZGF0YTogZGF0YVRvQWRkfSk7XG5cbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihzdG9yZSk7XG59KTsgXG5cblxuXG5hcHAuZ2V0KCcvYXBpL3N0b3JlcycsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgcXVlcnk6IHttaXNzaW5nLCBkYXRlIH0sXG4gICAgICAgIG1ldGhvZCxcbiAgICB9ID0gcmVxXG5cbiAgICBjb25zdCBmdWxsZGF0ZSA9IG5ldyBEYXRlKE51bWJlcihkYXRlKSk7XG5cbiAgICBwcmlzbWEuc3RvcmUuZmluZE1hbnkoe1xuICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICBTdG9yZXNPbkl0ZW1zOiB0cnVlLFxuICAgICAgICAgICAgSXRlbTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB3aGVyZTpcbiAgICAgICAge1xuICAgICAgICAgICAgZGF0ZTogZnVsbGRhdGUsXG4gICAgICAgICAgICBJdGVtOiB7XG4gICAgICAgICAgICAgICAgc29tZTpcbiAgICAgICAgICAgICAgICB7IGl0ZW06IG1pc3NpbmcgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyByZXN1bHRzIH0pO1xuICAgIH0pXG59KVxuXG5hcHAubGlzdGVuKHBvcnQsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZyhgRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgJHtwcm9jZXNzLmVudi5QT1JUfSFgKTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "express",
        "bodyParser",
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "PrismaClient",
        "prisma",
        "use",
        "json",
        "post",
        "req",
        "res",
        "body",
        "console",
        "log",
        "date",
        "dataToAdd",
        "storename",
        "location",
        "coordinates",
        "Date",
        "Number",
        "amount",
        "queue",
        "Item",
        "create",
        "items",
        "store",
        "data",
        "status",
        "get",
        "query",
        "missing",
        "method",
        "fulldate",
        "findMany",
        "include",
        "StoresOnItems",
        "where",
        "some",
        "item",
        "then",
        "results",
        "listen"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAIC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAII,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;AACA,IAAIC,GAAG,GAAGN,OAAO,EAAjB;;AAEA,MAAM;AAAEO,EAAAA;AAAF,IAAmBT,OAAO,CAAC,gBAAD,CAAhC;;AACA,MAAMU,MAAM,GAAG,IAAID,YAAJ,EAAf,C,CAEA;;AACAD,GAAG,CAACG,GAAJ,CAAQR,UAAU,CAACS,IAAX,EAAR;AAEAJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AAEA,QAAMC,SAAS,GAAG;AACdC,IAAAA,SAAS,EAAEL,IAAI,CAACK,SADF;AAEdC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QAFD;AAGdC,IAAAA,WAAW,EAAEP,IAAI,CAACO,WAHJ;AAIdJ,IAAAA,IAAI,EAAE,IAAIK,IAAJ,CAASC,MAAM,CAACT,IAAI,CAACG,IAAN,CAAf,CAJQ;AAKdO,IAAAA,MAAM,EAAEV,IAAI,CAACW,KALC;AAMdC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEb,IAAI,CAACc;AADX;AANQ,GAAlB;AAWA,QAAMC,KAAK,GAAK,MAAMrB,MAAM,CAACqB,KAAP,CAAaF,MAAb,CAAoB;AAAEG,IAAAA,IAAI,EAAEZ;AAAR,GAApB,CAAtB;AAEAL,EAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqBmB,KAArB;AACH,CAnBD;AAuBAvB,GAAG,CAAC0B,GAAJ,CAAQ,aAAR,EAAuB,CAACpB,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAM;AACFoB,IAAAA,KAAK,EAAE;AAACC,MAAAA,OAAD;AAAUjB,MAAAA;AAAV,KADL;AAEFkB,IAAAA;AAFE,MAGFvB,GAHJ;AAKA,QAAMwB,QAAQ,GAAG,IAAId,IAAJ,CAASC,MAAM,CAACN,IAAD,CAAf,CAAjB;AAEAT,EAAAA,MAAM,CAACqB,KAAP,CAAaQ,QAAb,CAAsB;AAClBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,IADV;AAELb,MAAAA,IAAI,EAAE;AAFD,KADS;AAKlBc,IAAAA,KAAK,EACL;AACIvB,MAAAA,IAAI,EAAEmB,QADV;AAEIV,MAAAA,IAAI,EAAE;AACFe,QAAAA,IAAI,EACJ;AAAEC,UAAAA,IAAI,EAAER;AAAR;AAFE;AAFV;AANkB,GAAtB,EAaGS,IAbH,CAaQC,OAAO,IAAI;AACf/B,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqB;AAAEkC,MAAAA;AAAF,KAArB;AACH,GAfD;AAgBH,CAxBD;AA0BAtC,GAAG,CAACuC,MAAJ,CAAW3C,IAAX,EAAiB,YAAY;AACzBa,EAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCb,OAAO,CAACC,GAAR,CAAYC,IAAK,GAA9D;AACH,CAFD",
      "sourceRoot": "/Users/arismarkogiannakis/Desktop/Demo/",
      "sourcesContent": [
        "require('dotenv').config();\n\nvar express = require('express');\nvar bodyParser = require('body-parser');\n\nvar port = process.env.PORT || 3000;\nvar app = express();\n\nconst { PrismaClient } = require('@prisma/client');\nconst prisma = new PrismaClient();\n\n// parse application/json - VERY IMPORTANT\napp.use(bodyParser.json());\n\napp.post('/api/stores', async (req, res) => {    \n    const { body } = req;\n    \n    console.log(body.date);\n\n    const dataToAdd = {\n        storename: body.storename,\n        location: body.location,\n        coordinates: body.coordinates,\n        date: new Date(Number(body.date)),\n        amount: body.queue,\n        Item: {\n            create: body.items,\n        },\n    };\n\n    const store =   await prisma.store.create({ data: dataToAdd});\n\n    res.status(200).json(store);\n}); \n\n\n\napp.get('/api/stores', (req, res) => {\n    const {\n        query: {missing, date },\n        method,\n    } = req\n\n    const fulldate = new Date(Number(date));\n\n    prisma.store.findMany({\n        include: {\n            StoresOnItems: true,\n            Item: true\n        },\n        where:\n        {\n            date: fulldate,\n            Item: {\n                some:\n                { item: missing }\n            }\n        }\n    }).then(results => {\n        res.status(200).json({ results });\n    })\n})\n\napp.listen(port, function () {\n    console.log(`Example app listening on port ${process.env.PORT}!`);\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1592910052392
  }
}